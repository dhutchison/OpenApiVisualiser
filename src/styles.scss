/* You can add global styles to this file, and also import other style files */
// @import "~@angular/material/prebuilt-themes/indigo-pink.css";

/* PrimeNG */
@import "~primeicons/primeicons.css";
@import "~primeng/resources/themes/nova-accent/theme.css";
@import "~primeng/resources/primeng.min.css";

/* Fonts */
@import url('https://fonts.googleapis.com/css?family=Montserrat|Open+Sans&display=swap');

/********** Core Styling ************/

body {
    font-family: 'Open Sans', 'Helvetica Neue', sans-serif;
}
#masthead {
    background: url('assets/images/logo.png') top left no-repeat;

    position: absolute;
    width: 219px;
    height:270px;
    top: 0;
    right: 395px;
    opacity: 0.25;
}

header.header {
    // height: 3em;
    padding-top: 2em;

    text-align: right;
}
h1.title {
    font-size: 2.4em;
    font-family: 'Montserrat', sans-serif;


}

/********** Colours *****************/
$mainHeaderColour: #475261;
$mainFontColour: #333333;

$deleteHighlightColour: #f93e3e;
$getHighlightColour: #61affe;
$postHighlightColour: #49cc90;
$putHighlightColour: #fca130;

/********** Button bar ********/
.button-bar {
    display: flex;
    margin-bottom: 2px;
}

/* Icon manipulation */
.icon-rotate-ccw-90 {
    transform: rotate(-90deg);
}


/********** Tree view buttons *************/
.path-tree-buttons {
    display: flex;

    .download-image-button {
        margin-left: auto;
    }
}


/********** Tree component styling ********/

.tree-view {
    overflow: auto;

    border: 0;
    background-color: #ffffff;
    color: #333333;
    border-radius: 3px;

    .p-tree-horizontal {
        /* Overriding the behaviour of the PrimeNG component here so that
         * the overflow control is on a component that we can change the style of
         * in the api-path-tree component when generating an image.
         */
        overflow: visible;

        /* Also moved these styles up in to .tree-view so they are in the component
         * that we are generating the image of
         */
         border: 0;
         background-color: transparent;
    }
}

.tree-vertical {
    .p-tree {
        width: auto;
        border: 0;
    }
}

.tree-vertical .p-treenode-content {
    background-image: linear-gradient(#cfd9df,#e2ebf0);
    font-weight: bold;

}

.p-treenode-http-method {
    .ui-corner-all {
        border-radius: 10px;
    }
}

.tree-detail-horizontal {
    display: flex;
}

.selected-node-detail {
    width: 100%;
}

#method-header-delete {
    background-color: $deleteHighlightColour;
}

#method-header-get {
    background-color: $getHighlightColour;
}

#method-header-post {
    background-color: $postHighlightColour;
}

#method-header-put {
    background-color: $putHighlightColour;
}

#method-summary {
    min-width: 15em;
}

.http-post {
    .p-panel, .p-component-header, .p-panel-content, .p-panel-footer {
        border-color: $postHighlightColour;
        background:rgba(73,204,144,.1);
    }

    .p-component-header button {
        background: $postHighlightColour;
        border-color: $postHighlightColour;
        padding: 0 0.5em
    }
}

.http-put {
    .p-panel, .p-component-header, .p-panel-content, .p-panel-footer {
        border-color:$putHighlightColour;
        background:rgba(252,161,48,.1);
    }
    .p-component-header .p-button {
        border-color:$putHighlightColour;
        background: $putHighlightColour;
        padding: 0 0.5em
    }
}

.http-get {
    .p-panel, .p-component-header, .p-panel-content, .p-panel-footer {
        border-color: $getHighlightColour;
        background:rgba(97,175,254,.1);
    }
    .p-component-header .p-button {
        border-color: $getHighlightColour;
        background: $getHighlightColour;
        padding: 0 0.5em
    }
}

.http-delete {
    .p-panel, .p-component-header, .p-panel-content, .p-panel-footer {
        border-color:$deleteHighlightColour;
        background:rgba(249,62,62,.1);
    }
    .p-component-header .p-button {
        border-color:$deleteHighlightColour;
        background: $deleteHighlightColour;
        padding: 0 0.5em
    }
}

// body
.p-tree {
    &.p-tree-horizontal, &.p-tree-vertical {

        .p-treenode-http-method-get .p-treenode .p-treenode-content {
            border-bottom: 2px solid $getHighlightColour;
        }

        .p-treenode-http-method-post .p-treenode .p-treenode-content {
            border-bottom: 2px solid $postHighlightColour;
        }

        .p-treenode-http-method-put .p-treenode .p-treenode-content {
            border-bottom: 2px solid $putHighlightColour;
        }

        .p-treenode-http-method-delete .p-treenode .p-treenode-content {
            border-bottom: 2px solid $deleteHighlightColour;
        }
    }
}

