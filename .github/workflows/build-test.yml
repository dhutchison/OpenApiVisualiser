# This is a basic workflow to help you get started with Actions

name: Build and Test

# Controls when the action will run. Triggers the workflow on pull request
# events but only for the master branch
on:
  pull_request:
    branches: [ master ]
    types: [opened, synchronize, reopened]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build-and-test"
  build-and-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout
      uses: actions/checkout@v2
      with:
        # Shallow clones should be disabled for a better relevancy of sonar analysis
        fetch-depth: 0
    # This installs node and npm for us
    - uses: actions/setup-node@v1
      with:
        node-version: '10.x'
    # this allows for re-using node_modules caching, making builds a bit faster.
    - uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    # Lint and Build
    - name: Install, Lint and Build
      run: |
        npm install
        npm run-script lint
        npm run-script build-deployment
    # Run tests
    - name: Test
      run: |
        npm run-script test:all
    # Code quality checks
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        # Needed to get PR information, if any
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    # Comment on the PR
    - name: Add comment to PR
      # if: contains(github.event.comment.body, 'special string')
      env:
        URL: ${{ github.event.pull_request.comments_url }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        curl \
          -X POST \
          $URL \
          -H "Content-Type: application/json" \
          -H "Authorization: token $GITHUB_TOKEN" \
          --data '{ "body": "Thanks for the PR!" }'
    - name: Auto approve
      # Perform the auto approve action only when the PR is raised by dependabot
      if: github.actor == 'dependabot[bot]' || github.actor == 'dependabot-preview[bot]'
      env:
        URL: ${{ github.event.pull_request.comments_url }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        curl \
          -X POST \
          $URL \
          -H "Content-Type: application/json" \
          -H "Authorization: token $GITHUB_TOKEN" \
          --data '{ "body": "@dependabot merge" }'

